function c(e){if(e){const o=e.querySelectorAll("img"),i=[];for(let t=0;t<o.length;t++){const s=o[t],n=s.src;n!=null&&n.length>0&&n.indexOf("/img/smiles")==-1&&(i.push(n),s.onclick=()=>{window.android&&window.android.onPreviewImage(n,i)})}e.querySelectorAll("span.text_mask").forEach(t=>{const s=t;s.onclick=n=>{n.preventDefault(),s.style.color="white"}})}}const l=e=>e.classList.contains("text_mask")?(e.style.color="white",!0):e instanceof HTMLImageElement?(window.android&&window.android.onPreviewImage(e.src,[e.src]),!0):!1,a=(e,o,i)=>{const t=e.target;if(t&&o){const s=t.getBoundingClientRect();o.scrollTo({top:o.scrollTop+s.top-40,behavior:"smooth"});const n=()=>{t.classList.remove("blinking"),t.removeEventListener("animationend",n)};t.classList.add("blinking"),t.addEventListener("animationend",n)}},r=(e,o)=>{let i=o.replace(/<div class="quote">([^^]*?)<\/div>/,"").replace(/<span class="text_mask" style="([^^]*?)">([^^]*?)<\/span>/,"").replace(/<\/?[^>]+>/g,"").replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/\B@([^\W_]\w*)\b/g,"＠$1");return i.length>100&&(i=i.slice(0,100)+"..."),"[quote][b]"+e+"[/b] 说: "+i+"[/quote]"},d={injectImageClick:c,injectHandleItemClick:l,scrollIntoView:a,handleQuote:r};export{d as c};
